name: Build Image Workflow

on:
  workflow_call:
    inputs:
      FEATURE_BRANCH_NAME:
        required: true
        type: string
      DEFAULT_CHECKOUT:
        required: true
        type: string
    secrets:
      GH_ACCESS_TOKEN:
        required: true
      DOCKERHUB_USERNAME:
        required: true
      DOCKERHUB_TOKEN:
        required: true

jobs:
  clone_repos:
    name: Clone Repos
    runs-on: ubuntu-20.04
    steps:
      - run: | # Get commit for the feature branch, if it exists
          FEATURE_COMMIT=$(git ls-remote --heads https://tleerai:${{ secrets.GH_ACCESS_TOKEN }}@github.com/tleerai/service1.git ${{ inputs.FEATURE_BRANCH_NAME }} | awk '{print $1; }')
          echo "::set-output name=FEATURE_BRANCH_COMMIT::$FEATURE_COMMIT"
      - name: Checkout Service1
        uses: actions/checkout@v3
        with:
          repository: tleerai/service1
          ref: ${{ env.FEATURE_BRANCH_COMMIT || inputs.DEFAULT_CHECKOUT }} # Checkout the commit of the feature branch, or default
          path: ./meta/service1 # Clone the repo to this directory
          token: ${{ secrets.GH_ACCESS_TOKEN }} # Needed to authenticate with the remote repository

      - run: | # Get commit for the feature branch, if it exists
          FEATURE_COMMIT=$(git ls-remote --heads https://tleerai:${{ secrets.GH_ACCESS_TOKEN }}@github.com/tleerai/service2.git ${{ inputs.FEATURE_BRANCH_NAME }} | awk '{print $1; }')
          echo "::set-output name=FEATURE_BRANCH_COMMIT::$FEATURE_COMMIT"
      - run: echo "::set-output name=FEATURE_BRANCH_COMMIT::$FEATURE_COMMIT"
      - name: Checkout Service2
        uses: actions/checkout@v3
        with:
          repository: tleerai/service2
          ref: ${{ inputs.FEATURE_BRANCH_COMMIT || inputs.DEFAULT_CHECKOUT }}
          path: ./meta/service2
          token: ${{ secrets.GH_ACCESS_TOKEN }}

      - uses: actions/upload-artifact@v3
        with:
          name: repo-artifact
          path: ./meta # or ${{ github.workspace }}
          if-no-files-found: error

  service1:
    name: Service1
    needs: clone_repos
    runs-on: ubuntu-20.04
    steps:
      - run: echo "::set-output name=TAG_NAME::$(git --git-dir=./meta/service1.git rev-parse HEAD)" # Obtain the latest commit SHA of the repo
      - id: build_image_action
        uses: tleerai/sandbox/.github/actions/build-image@main
        with:
          DOCKER_TAG: ${{ env.TAG_NAME }}
          DOCKERFILE_PATH: ./meta/service1/Dockerfile
          IMAGE_NAME: service1
          DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
          DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}

  service2:
    name: Service2
    needs: clone_repos
    runs-on: ubuntu-20.04
    steps:
      - run: echo "::set-output name=TAG_NAME::$(git --git-dir=./meta/service2.git rev-parse HEAD)" # Obtain the latest commit SHA of the repo
      - id: build_image_action
        uses: tleerai/sandbox/.github/actions/build-image@main
        with:
          DOCKER_TAG: ${{ env.TAG_NAME }}
          DOCKERFILE_PATH: ./meta/service2/Dockerfile
          IMAGE_NAME: service2
          DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
          DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
